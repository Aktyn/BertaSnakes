{
  "plugins": [
    "prettier",
    "unicorn",
    "import"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "tsconfig.json",
    "sourceType": "module"
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:prettier/recommended"
  ],
  "root": true,
  "env": {
    "node": true,
    "jest": true
  },
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [
        ".ts",
        ".tsx"
      ]
    },
    "import/resolver": {
      "typescript": {}
    }
  },
  "rules": {
    "prettier/prettier": [
      "error",
      {
        "singleQuote": true,
        "tabWidth": 2,
        "parser": "typescript"
      }
    ],
    "@typescript-eslint/await-thenable": "error",
    "@typescript-eslint/no-non-null-assertion": "error",
    "@typescript-eslint/no-use-before-define": [
      "error",
      {
        "functions": false,
        "classes": true,
        "variables": false
      }
    ],
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "variable",
        "modifiers": [
          "const",
          "destructured",
          "global"
        ],
        "format": [
          "strictCamelCase"
        ]
      },
      {
        "selector": "variable",
        "modifiers": [
          "exported"
        ],
        "types": [
          "boolean",
          "string",
          "number",
          "array"
        ],
        "format": [
          "UPPER_CASE"
        ]
      },
      {
        "selector": "function",
        // allow StrictPascalCase for decorators
        "format": [
          "strictCamelCase",
          "StrictPascalCase"
        ]
      },
      {
        "selector": [
          "class",
          "interface",
          "typeAlias"
        ],
        "format": [
          "StrictPascalCase"
        ]
      },
      {
        "selector": "typeParameter",
        "format": [
          "PascalCase"
        ]
      }
    ],
    "import/order": [
      "error",
      {
        "pathGroupsExcludedImportTypes": [
          "builtin"
        ],
        "groups": [
          "builtin",
          "external",
          "internal",
          "parent",
          [
            "sibling",
            "index"
          ]
        ],
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ],
    "unicorn/catch-error-name": [
      "error",
      {
        "name": "err"
      }
    ],
    "unicorn/filename-case": [
      "error",
      {
        "cases": {
          "kebabCase": true
        }
      }
    ],
    "no-console": "warn",
    "@typescript-eslint/no-explicit-any": "error",
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": [
          "**/*.test.ts",
          "**/*.spec.ts",
          "**/*.test.tsx",
          "src/test-utils/**"
        ]
      }
    ],
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/interface-name-prefix": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/no-extra-semi": "off",
    "@typescript-eslint/consistent-type-imports": "error",
    "@typescript-eslint/consistent-type-exports": "error"
  },
  "overrides": [
    {
      "files": [
        "*.test.ts",
        "*.spec.ts",
        "**/test-utils/**"
      ],
      "parserOptions": {
        "project": "tsconfig.test.json",
        "sourceType": "module"
      },
      "rules": {
        "@typescript-eslint/no-explicit-any": [
          0
        ],
        "@typescript-eslint/no-non-null-assertion": [
          0
        ]
      }
    }
  ]
}